
name: 03-strapi-publish-dev

on:
  workflow_dispatch:  # Manual trigger without inputs

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

env:
  AWS_ECR_URI: 340752798883.dkr.ecr.eu-central-1.amazonaws.com/ultralinkk/strapi
  AWS_ECR_URL: 340752798883.dkr.ecr.eu-central-1.amazonaws.com
  IMAGE_TAG: latest
  SECRET_ID: arn:aws:secretsmanager:eu-central-1:340752798883:secret:dev/ultralinkk/strapi-Dm1aL8
  ENV_FILE_PATH: /home/ec2-user/app/.env
  AWS_REGION: eu-central-1

jobs:
  publish-image:
    uses: yakamozo10/shared-workflows/.github/workflows/pull-push-ecr-template.yaml@main
    with:
      aws_ecr_uri: "340752798883.dkr.ecr.eu-central-1.amazonaws.com/ultralinkk/strapi"
      image_repository: "ultralinkk/strapi"
      image_tag: 'latest' # The tag to be used for the Docker image
      aws_iam_role_arn: 'arn:aws:iam::340752798883:role/github-strapi-infra-role-dev'
      aws_iam_role_session_name: "github-ultralink-infra-role-dev"
      aws_region: "eu-central-1"
      environment: "dev"
      environment_url: "https://dev.ultralinkk.com"

  deploy-image:
    runs-on: ubuntu-latest
    needs: publish-image
    steps:
      - name: configure-aws-credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: 'arn:aws:iam::340752798883:role/github-strapi-infra-role-dev'
          role-session-name: "github-ultralink-infra-role-dev"
          aws-region: ${{ env.AWS_REGION }}
      - name: Set SSM Parameters
        run: |
          aws ssm put-parameter --name ECRRepositoryUri --value ${{ env.AWS_ECR_URI }} --overwrite --type String
          aws ssm put-parameter --name ECRRepositoryUrl --value ${{ env.AWS_ECR_URL }} --overwrite --type String
          aws ssm put-parameter --name ImageTagVersion --value ${{ env.IMAGE_TAG }} --overwrite --type String
          aws ssm put-parameter --name SecretId --value ${{ env.SECRET_ID }} --overwrite --type String
          aws ssm put-parameter --name EnvFilePath --value ${{ env.ENV_FILE_PATH }} --overwrite --type String
          aws ssm put-parameter --name Region --value ${{ env.AWS_REGION }} --overwrite --type String
      - name: Run SSM Document
        run: |
          aws ssm send-command --document-name "docker-image-deployment" --targets Key=tag:Role,Values=ultralinkk-server Key=tag:Environment,Values=dev Key=tag:Project,Values=ultralinkk